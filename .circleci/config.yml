version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0

jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo Installing dependencies...”
          npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo “Running tests...”
          npm run test


  # The 'scan' job performs container security scanning
  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: weepynn/my-node-app
    steps:
      - checkout
      - setup_remote_docker      
      - docker/check:
          docker-username: DOCKERHUB_LOGIN
          docker-password: DOCKERHUB_PASSWORD
      - run: docker build -t $IMAGE_NAME .
      - snyk/scan: 
          docker-image-name: $IMAGE_NAME
          # The "fail-on-issues: false" option makes the scan report issues but always exit with code 0
          # This allows the pipeline to continue even if vulnerabilities are found
          fail-on-issues: true


# The 'codescan' job performs static code analysis on your source code
  codescan:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - snyk/install
      - run: |
          snyk code test

  
  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: DOCKERHUB_USERNAME
          docker-password: DOCKERHUB_PASSWORD
      - docker/build:
          image: weepynn/my-node-app
      - docker/push:
          image: weepynn/my-node-app
  deploy:
    docker:
        - image: cimg/node:16.10
    steps:
        - setup_remote_docker      
        - heroku/install
        - checkout
        - run:
            name: Heroku Container Push
            command: | 
                heroku container:login
                heroku stack:set container -a weepynn
                heroku container:push web -a weepynn
                heroku container:release web -a weepynn

workflows:
  simple_workflow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
                - release
      - test:
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - release
      - publish:
          requires:
            - test
          filters:
            branches:
              only:
                - release
      - deploy:
          requires:
            - publish
          filters:
            branches:
              only:
                - release
